// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OSCiR.Areas.Shared;

namespace OSCiR.Migrations
{
    [DbContext(typeof(CMDbContext))]
    [Migration("20190520074723_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("OSCiR.Model.ClassEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AllowAnyData");

                    b.Property<string>("Category");

                    b.Property<string>("ClassName");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<bool>("IsInstantiable");

                    b.Property<bool>("IsPromiscuous");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.HasKey("Id");

                    b.HasIndex("ClassName")
                        .IsUnique();

                    b.ToTable("Class");
                });

            modelBuilder.Entity("OSCiR.Model.ClassExtendEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClassEntityId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<Guid>("ExtendsClassEntityId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.HasKey("Id");

                    b.HasIndex("ClassEntityId");

                    b.HasIndex("ExtendsClassEntityId");

                    b.HasIndex("DeletedOn", "ClassEntityId", "ExtendsClassEntityId")
                        .IsUnique();

                    b.ToTable("ClassExtend");
                });

            modelBuilder.Entity("OSCiR.Model.ClassPropertyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClassEntityId");

                    b.Property<string>("Comments");

                    b.Property<string>("ControlType");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DefaultValue");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<string>("DisplayGroup");

                    b.Property<string>("DisplayLabel");

                    b.Property<int>("DisplayOrder");

                    b.Property<string>("HideWhen");

                    b.Property<string>("InternalName");

                    b.Property<bool>("IsMandatory");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("TypeDefinition");

                    b.HasKey("Id");

                    b.HasIndex("ClassEntityId", "InternalName")
                        .IsUnique();

                    b.ToTable("ClassProperty");
                });

            modelBuilder.Entity("OSCiR.Model.ClassRelationshipEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<bool>("IsUnique");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("RelationshipDescription");

                    b.Property<Guid>("SourceClassEntityId");

                    b.Property<Guid>("TargetClassEntityId");

                    b.HasKey("Id");

                    b.HasIndex("SourceClassEntityId");

                    b.HasIndex("TargetClassEntityId");

                    b.HasIndex("DeletedOn", "TargetClassEntityId");

                    b.HasIndex("DeletedOn", "SourceClassEntityId", "TargetClassEntityId", "RelationshipDescription")
                        .IsUnique();

                    b.ToTable("ClassRelationship");
                });

            modelBuilder.Entity("OSCiR.Model.ConfigItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClassEntityId");

                    b.Property<string>("Comments");

                    b.Property<string>("ConcreteReference");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name");

                    b.Property<Guid>("OwnerId");

                    b.Property<string>("PropertiesInternal")
                        .HasColumnName("Properties")
                        .HasColumnType("json");

                    b.HasKey("Id");

                    b.HasIndex("ClassEntityId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("DeletedOn", "ClassEntityId", "OwnerId", "Name")
                        .IsUnique();

                    b.ToTable("ConfigItem");
                });

            modelBuilder.Entity("OSCiR.Model.ConfigItemRelationshipEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("RelationshipDescription");

                    b.Property<Guid>("SourceConfigItemEntityId");

                    b.Property<Guid>("TargetConfigItemEntityId");

                    b.HasKey("Id");

                    b.HasIndex("SourceConfigItemEntityId");

                    b.HasIndex("TargetConfigItemEntityId");

                    b.HasIndex("DeletedOn", "TargetConfigItemEntityId");

                    b.HasIndex("DeletedOn", "SourceConfigItemEntityId", "TargetConfigItemEntityId", "RelationshipDescription")
                        .IsUnique();

                    b.ToTable("ConfigItemRelationship");
                });

            modelBuilder.Entity("OSCiR.Model.OwnerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlternateName1");

                    b.Property<string>("Category");

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("OwnerCode");

                    b.Property<string>("OwnerName");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("OSCiR.Model.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsAdmin");

                    b.Property<DateTime?>("LastLogin");

                    b.Property<string>("LastName");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("OSCiR.Model.ClassExtendEntity", b =>
                {
                    b.HasOne("OSCiR.Model.ClassEntity", "ParentClass")
                        .WithMany("Extends")
                        .HasForeignKey("ClassEntityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OSCiR.Model.ClassEntity", "ExtendsClass")
                        .WithMany()
                        .HasForeignKey("ExtendsClassEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OSCiR.Model.ClassPropertyEntity", b =>
                {
                    b.HasOne("OSCiR.Model.ClassEntity", "ParentClass")
                        .WithMany("Properties")
                        .HasForeignKey("ClassEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OSCiR.Model.ClassRelationshipEntity", b =>
                {
                    b.HasOne("OSCiR.Model.ClassEntity", "SourceClassEntity")
                        .WithMany("SourceRelationships")
                        .HasForeignKey("SourceClassEntityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OSCiR.Model.ClassEntity", "TargetClassEntity")
                        .WithMany("TargetRelationships")
                        .HasForeignKey("TargetClassEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OSCiR.Model.ConfigItemEntity", b =>
                {
                    b.HasOne("OSCiR.Model.ClassEntity", "ParentClassEntity")
                        .WithMany("ConfigItemEntities")
                        .HasForeignKey("ClassEntityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OSCiR.Model.OwnerEntity", "Owner")
                        .WithMany("ConfigItems")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("OSCiR.Model.ConfigItemRelationshipEntity", b =>
                {
                    b.HasOne("OSCiR.Model.ConfigItemEntity", "SourceConfigItem")
                        .WithMany("SourceRelationships")
                        .HasForeignKey("SourceConfigItemEntityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OSCiR.Model.ConfigItemEntity", "TargetConfigItem")
                        .WithMany("TargetRelationships")
                        .HasForeignKey("TargetConfigItemEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
